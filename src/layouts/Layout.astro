---
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Antareep Dey - Machine Learning Engineer" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Plus+Jakarta+Sans:wght@400;500;600;700&display=swap" rel="stylesheet" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class="bg-[#0a0a0a] text-white">
    <div class="fixed inset-0 -z-10">
      <div class="absolute inset-0">
        <div class="absolute top-0 left-0 right-0 h-[500px] bg-gradient-to-br from-blue-500/20 via-purple-500/20 to-pink-500/20 blur-3xl opacity-50"></div>
      </div>
      <div class="absolute inset-0 bg-[radial-gradient(circle_at_bottom,_var(--tw-gradient-stops))] from-purple-900/20 via-black to-transparent"></div>
      <div class="absolute top-0 left-0 right-0 h-px bg-gradient-to-r from-transparent via-purple-500/50 to-transparent"></div>
    </div>
    <div class="max-w-3xl mx-auto">
      <slot />
    </div>
    <style is:global>
      html {
        scrollbar-width: none;
        -ms-overflow-style: none;
        scroll-behavior: smooth;
      }

      body {
        max-width: 100vw;
        overflow-x: hidden;
      }

      ::-webkit-scrollbar {
        display: none;
      }


      @keyframes fadeInUp {
        from {
          opacity: 0;
          transform: translateY(20px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      .fade-in-up {
        animation: fadeInUp 0.6s ease-out forwards;
        opacity: 0;
      }

      [data-scroll] {
        opacity: 1;
        transform: translateY(20px);
        transition: opacity 0.6s ease-out, transform 0.6s ease-out;
      }

      [data-scroll].in-view {
        opacity: 1;
        transform: translateY(0);
      }
      
      .gradient-heading {
        @apply bg-clip-text text-transparent;
        background-image: linear-gradient(
          90deg,
          #f97316,
          #c084fc,
          #60a5fa,
          #f97316
        );
        background-size: 300% 100%;
        animation: gradient 8s ease infinite;
      }
      

      @keyframes gradient {
        0% {
          background-position: 0% 50%;
        }
        50% {
          background-position: 100% 50%;
        }
        100% {
          background-position: 0% 50%;
        }
      }

      

      .glass-card {
        @apply bg-white/5 backdrop-blur-lg border border-white/10 shadow-xl;
        transition: transform 0.3s ease-out, opacity 0.3s ease-out;
      }

      .glass-card:hover {
        transform: translateY(-5px);
      }

      ::selection {
        @apply bg-purple-500/30 text-white;
      }

      img {
        opacity: 1;
        transition: opacity 0.3s ease-out;
      }

      img.loaded {
        opacity: 1;
      }
    </style>
    <script>
      // Lazy loading for images
      const lazyLoadImages = () => {
        const images = document.querySelectorAll('img[loading="lazy"]');
        const imageObserver = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              const img = entry.target as HTMLImageElement;
              img.src = img.dataset.src || img.src;
              img.classList.add('loaded');
              imageObserver.unobserve(img);
            }
          });
        });

        images.forEach(img => imageObserver.observe(img));
      };

      // Scroll animations
      const observeScrollElements = () => {
        const observer = new IntersectionObserver(
          (entries) => {
            entries.forEach(entry => {
              if (entry.isIntersecting) {
                entry.target.classList.add('in-view');
              }
            });
          },
          {
            threshold: 0.1,
            rootMargin: '0px'
          }
        );

        document.querySelectorAll('[data-scroll]').forEach(element => {
          observer.observe(element);
        });
      };

      // Initialize on page load
      document.addEventListener('astro:page-load', () => {
        lazyLoadImages();
        observeScrollElements();
      });
    </script>
  </body>
</html>